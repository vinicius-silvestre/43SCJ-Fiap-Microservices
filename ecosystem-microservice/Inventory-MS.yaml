openapi: 3.0.1
info:
  title: Inventory-MS - OpenAPI 3.0
  description: |-
   This is an API for a fake Inventory to deliver the FIAP university microservices project
  version: v1
tags:
  - name: History
    description: Operations of History
  - name: Inventory
    description: Operations of Inventory
  - name: Products
    description: Operations of Products
  - name: Category
    description: Operations of Category

paths:
  /api/History:
    get:
      tags:
        - History
      summary: Get the history of inputs and outputs of products
      description: Get the history of inputs and outputs of products
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
  
                  
                  
  /api/Inventory:
    get:
      tags:
        - Inventory
      summary: Get all products in inventory
      description: Get all products
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
  /api/Inventory/{id}:
    post:
      tags:
        - Inventory
      summary: Insert specific product in inventory
      description: Insert specific product in inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
    delete:
      tags:
        - Inventory
      summary: Deleting specific product in inventory
      description: Deleting specific product in inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'    
           
           
           
           
                  
  /api/Products:
    get:
      tags:
        - Products
      summary: Obter todos os produtos
      description: Get all products
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      summary: Creating a New Product
      description: Product creation success boolean on return
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          text/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/Products/{id}:
    get:
      tags:
        - Products
      summary: Get requested product data
      description: Product Data
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      tags:
        - Products
      summary: Change requested product
      description: Boolean of the success of the product change requested in the return
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          text/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Products
      summary: Deleting a New Product
      description: Product delete success boolean on return
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Products/Category/{idCategory}:
    get:
      tags:
        - Products
      summary: Get all products in the requested category
      description: List of Products of the requested Category
      parameters:
        - name: idCategory
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
                  
                  
                  
                  
  /api/Category:
    get:
      tags:
        - Category
      summary: Get all categories
      description: List of Categories
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - Category
      summary: Add Category
      description: Creation Success Boolean on Return
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          text/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Category'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            text/json:
              schema:
                $ref: '#/components/schemas/Category'
  /api/Category/{id}:
    get:
      tags:
        - Category
      summary: Get the requested category
      description: Requested Category Data
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Category'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            text/json:
              schema:
                $ref: '#/components/schemas/Category'
    put:
      tags:
        - Category
      summary: Change requested category
      description: Success Boolean of change in return
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          text/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Category
      summary: Delete requested category
      description: Successful boolean of delete on return
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
components:
  schemas:
    History:
      required:
        - category
      type: object
      properties:
        idProduct:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        operationType:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
      
    Inventory:
      required:
        - category
      type: object
      properties:
        idProduct:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
      additionalProperties: false
      
    Product:
      required:
        - category
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        category:
          type: integer
          format: int32
        createDate:
          type: string
          format: date-time
      additionalProperties: false
      
    Category:
      required:
        - name
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        createDate:
          type: string
          format: date-time
      additionalProperties: false